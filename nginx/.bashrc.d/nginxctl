#!/bin/bash
sites_avail="/etc/nginx/sites-available"
sites_enabl="/etc/nginx/sites-enabled"

nginxctl() {
	# Ensure that we got 2 arguments
	if [ "$#" -ne 2 ]; then
		echo "Expected 2 arguments go $#" 2>&1
		return 2
	fi

	# Ensure that the user provided a correct action
	case $1 in
	enable|disable|edit)
		# All is well
		;;
	*)
		echo "No action named '$1'" 2>&1
		return 1
		;;
	esac

	# Ensure that host does not contain any "/"" (to prevent accidental
	# directory traversal)
	if [[ "$2" == *\/* ]]; then
		echo "Site must not contain any '/'" 2>&1
		return 3
	fi

	# Dispatch correct action
	case $1 in
	"enable")
		if [ ! -f "$sites_avail/$2" ]; then
			echo "No site named '$2'" 2>&1
			return 4
		fi

		if [ -f "$sites_enabl/$2" ]; then
			echo "Site $2 is already enabled" 2>&1
		else
			sudo ln -s "$sites_avail/$2" "$sites_enabl/"
		fi
		;;
	"disable")
		if [ ! -f "$sites_avail/$2" ]; then
			echo "No site named '$2'" 2>&1
			return 4
		fi

		if [ ! -f "$sites_enabl/$2" ]; then
			echo "Site $2 is already disabled" 2>&1
		else
			sudo rm "$sites_enabl/$2"
		fi
		;;
	"edit")
		sudo -e "$sites_avail/$2"
		;;
	esac

	return 0
}

_nginxctl() {
	local current=${COMP_WORDS[COMP_CWORD]}
	if [ "$COMP_CWORD" -eq "1" ]; then
		COMPREPLY=( $(compgen -W "enable disable edit" -- $current) )
	elif [ "$COMP_CWORD" -eq "2" ]; then
		COMPREPLY=( $(compgen -W "$(ls -1 $sites_avail|xargs)" -- $current) )
	fi
}

complete -F _nginxctl nginxctl
