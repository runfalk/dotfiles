#!/bin/bash
rtdoffline() {
	local formats="pdf htmlzip epub"
	local output_format="pdf"
	local version="latest"

	local OPTIND opt
	while getopts ":f:v:" opt; do
		case $opt in
			f)
				if [[ " $formats " != *" $OPTARG "* ]]; then
					echo "Invalid format '$OPTARG', expected one of $formats" >&2
					return 2
				fi
				output_format="$OPTARG"
				;;
			v)
				version="$OPTARG"
				;;
			\?)
				echo "Invalid option: -$OPTARG" >&2
				return 1
				;;
		esac
	done
	shift $((OPTIND-1))

	if [ "$#" -lt 1 ]; then
		echo "Expected at least one project, got 0"
	fi

	for project in "$@"; do
		echo "Downloading documentation for $project"
		wget \
			-q \
			--show-progress \
			--progress=dot \
			--content-disposition \
			"https://readthedocs.org/projects/$project/downloads/$output_format/$version/"

		# Save exit status
		local rc="$?"

		# Print newline since wget doesn't do that in quiet mode
		echo
		echo

		# Process return code
		case "$rc" in
			0)
				echo -e "\033[32mSuccessfully downloaded $project\033[0m"
				;;
			3|4)
				echo -e "\033[31mConnection lost when getting $project\033[0m" >&2
				;;
			5)
				echo -e "\033[31mSSL verification error for $project\033[0m" >&2
				;;
			8)
				echo -e "\033[31mFailed to download $project, it likely does not exist on RTD\033[0m" >&2
				;;
			*)
				echo -e "\033[31mAn error occured when downloading $project, exit code $rc\033[0m" >&2
				;;
		esac
	done

	return 0
}
